@import com.geirsson.reavealjs.RevealJs._

@slide
  @h1
    Meet Bloop
  @h3
    And get more productive with Scala

@slide
  @h3
    About us

  @p
    bla bla

  @p
    bla bla

@slide
  @h3
    Agenda

  @ul
    @li
      What is Bloop?

    @li
      What hinders developer productivity today?

    @li
      How can we solve those problems?

    @li
      How to turn those solutions in tooling

    @li
      Benchmarks & numbers

    @li
      Demo

@slide
  @img(src := "img/bloop.png",
       style := "border: none; box-shadow: none; width: 80%")

@slide
  @h2
    What is Bloop?

  @p
    Bloop is tool we wrote to make developers more productive.

  @p
    Bloop is a compile and test server that helps you get a better workflow.

@slide
  @h3
    What problems are we solving?

  @p
    @ol
      @li
        Efforts are duplicated in the Scala tooling space.

      @li
        Scala developers need a faster workflow.

  @p
    Bloop addresses both problems, we'll focus on the second.

@slide
  @h2
    Scala developers need a faster workflow

@slide
  @h3
    Our tools are slow

  @ul
    @li
      Our build tools take a long time to start up

    @li
      sbt/sbt: xxx seconds

    @li
      guardian/frontend: xxx seconds

    @li
      scala/scala: xxx seconds

@slide
  @h3
    We're throwing away the JVM's job!

  @ul
    @li
      The JVM works hard to optimize code as it runs.

    @li
      Optimized/JITted compiler can be up to 20x faster!

    @li
      We should never discard those "hot" compilers.

    @li
      Restarting or reloading sbt throws away your hot compilers.

@slide
  @h3
    We're duplicating work!

  @ul
    @li
      IDEs continuously compile our code to give us diagnostics

    @li
      Our build tools compile our code too

    @li
      Why do they do the job twice?

    @li
      Can't they at least share some parts?

@slide
  @h3
    Bloop is our solution.

@slide
  @h3
    But...

@slide
  @h3
    Adopting a new tool is hard

  @ul
    @li
      Adoption depends on ease of use.

    @li
      Developers don't want to lear new tools.

    @li
      Habits are hard to change.

@slide
  @h3
    New tools should integrate seamlessly in developers' workflow.

@slide
  @h3
    Integrations

  @ul
    @li
      Bloop implements the Build Server Protocol (BSP)

    @li
      BSP describes how a client can get infos about a build

    @li
      It is inspired by LSP

    @li
      More infos in Jorge's and Justin's talk at ScalaSphere 2018

@slide
  @h3
    A new architecture

  @p
    // Graph...

  @ul
    @li
      Both build tools and IDEs communicate with the BSP server

    @li
      They delegate compilation, etc. to the BSP server.

@slide
  @h3
    Remote compilation

  @ul
    @li
      Compilation jobs can be delegated to powerful, remote clusters

    @li
      ...

@slide
  @h3
    Pipelined compilation

  @ul
    @li
      ...

@slide
  @h1
    Benchmarks

@slide
  @cite
    "Bloop is awesome"

@slide
  @h1
    Demo
